import matplotlib.pyplot as plt
from mpl_toolkits.basemap import Basemap
from geopy.geocoders import Nominatim # Esto es si sabes una calle sacar las coordendas geogericas

import math
# importing pandas
import pandas
# read in csv file containing location data
# display table from csv file


# import folium
import folium
import geopy
import geopy.distance

import matplotlib.pyplot as plt
from mpl_toolkits.basemap import Basemap
from geopy.geocoders import Nominatim
import math
# importing pandas
import pandas
# read in csv file containing location data
# display table from csv file


# import folium
import folium
localizacion=[
  [
    43.27081,
    -2.93928
  ],
  [
    43.271079847214196,
    -2.93927999996724
  ],
  [
    43.2705401527858,
    -2.93927999996724
  ],
  [
    43.27081,
    -2.939008696319679
  ],
  [
    43.27081,
    -2.9395513036790004
  ],
  [
    43.271079847214196,
    -2.9390086962869186
  ],
  [
    43.271079847214196,
    -2.93955130364624
  ],
  [
    43.2705401527858,
    -2.9390086962869186
  ],
  [
    43.2705401527858,
    -2.93955130364624
  ],
  [
    43.271079847214196,
    -2.9387373926052764
  ],
  [
    43.271079847214196,
    -2.9398226073239195
  ],
  [
    43.2705401527858,
    -2.9387373926052764
  ],
  [
    43.2705401527858,
    -2.9398226073239195
  ],
  [
    43.271079847214196,
    -2.9384660889223135
  ],
  [
    43.271079847214196,
    -2.940093911000276
  ],
  [
    43.2705401527858,
    -2.9384660889223135
  ],
  [
    43.2705401527858,
    -2.940093911000276
  ],
  [
    43.271079847214196,
    -2.9381947852380286
  ],
  [
    43.271079847214196,
    -2.940365214675312
  ],
  [
    43.2705401527858,
    -2.9381947852380286
  ],
  [
    43.2705401527858,
    -2.940365214675312
  ],
  [
    43.271079847214196,
    -2.9379234815524233
  ],
  [
    43.271079847214196,
    -2.9406365183490255
  ],
  [
    43.2705401527858,
    -2.9379234815524233
  ],
  [
    43.2705401527858,
    -2.9406365183490255
  ],
  [
    43.271349694428395,
    -2.9392799998689583
  ],
  [
    43.2702703055716,
    -2.9392799998689583
  ],
  [
    43.27081,
    -2.9387373926380365
  ],
  [
    43.27081,
    -2.9398226073566787
  ],
  [
    43.271349694428395,
    -2.9390086961886372
  ],
  [
    43.271349694428395,
    -2.939551303547958
  ],
  [
    43.2702703055716,
    -2.9390086961886372
  ],
  [
    43.2702703055716,
    -2.939551303547958
  ],
  [
    43.271349694428395,
    -2.938737392506995
  ],
  [
    43.271349694428395,
    -2.9398226072256373
  ],
  [
    43.2702703055716,
    -2.938737392506995
  ],
  [
    43.2702703055716,
    -2.9398226072256373
  ],
  [
    43.271349694428395,
    -2.9384660888240313
  ],
  [
    43.271349694428395,
    -2.9400939109019943
  ],
  [
    43.2702703055716,
    -2.9384660888240313
  ],
  [
    43.2702703055716,
    -2.9400939109019943
  ],
  [
    43.271349694428395,
    -2.9381947851397467
  ],
  [
    43.271349694428395,
    -2.94036521457703
  ],
  [
    43.2702703055716,
    -2.9381947851397467
  ],
  [
    43.2702703055716,
    -2.94036521457703
  ],
  [
    43.271349694428395,
    -2.937923481454142
  ],
  [
    43.271349694428395,
    -2.9406365182507432
  ],
  [
    43.2702703055716,
    -2.937923481454142
  ],
  [
    43.2702703055716,
    -2.9406365182507432
  ],
  [
    43.27161954164259,
    -2.9392799997051573
  ],
  [
    43.2700004583574,
    -2.9392799997051573
  ],
  [
    43.27081,
    -2.938466088955073
  ],
  [
    43.27081,
    -2.940093911033036
  ],
  [
    43.27161954164259,
    -2.9390086960248363
  ],
  [
    43.27161954164259,
    -2.939551303384157
  ],
  [
    43.2700004583574,
    -2.9390086960248363
  ],
  [
    43.2700004583574,
    -2.939551303384157
  ],
  [
    43.27161954164259,
    -2.938737392343194
  ],
  [
    43.27161954164259,
    -2.9398226070618363
  ],
  [
    43.2700004583574,
    -2.938737392343194
  ],
  [
    43.2700004583574,
    -2.9398226070618363
  ],
  [
    43.27161954164259,
    -2.9384660886602307
  ],
  [
    43.27161954164259,
    -2.9400939107381934
  ],
  [
    43.2700004583574,
    -2.9384660886602307
  ],
  [
    43.2700004583574,
    -2.9400939107381934
  ],
  [
    43.27161954164259,
    -2.938194784975946
  ],
  [
    43.27161954164259,
    -2.940365214413229
  ],
  [
    43.2700004583574,
    -2.938194784975946
  ],
  [
    43.2700004583574,
    -2.940365214413229
  ],
  [
    43.27161954164259,
    -2.9379234812903405
  ],
  [
    43.27161954164259,
    -2.940636518086943
  ],
  [
    43.2700004583574,
    -2.9379234812903405
  ],
  [
    43.2700004583574,
    -2.940636518086943
  ],
  [
    43.271889388856785,
    -2.9392799994758345
  ],
  [
    43.26973061114321,
    -2.9392799994758345
  ],
  [
    43.27081,
    -2.9381947852707886
  ],
  [
    43.27081,
    -2.9403652147080717
  ],
  [
    43.271889388856785,
    -2.9390086957955135
  ],
  [
    43.271889388856785,
    -2.939551303154835
  ],
  [
    43.26973061114321,
    -2.9390086957955135
  ],
  [
    43.26973061114321,
    -2.939551303154835
  ],
  [
    43.271889388856785,
    -2.938737392113871
  ],
  [
    43.271889388856785,
    -2.9398226068325135
  ],
  [
    43.26973061114321,
    -2.938737392113871
  ],
  [
    43.26973061114321,
    -2.9398226068325135
  ],
  [
    43.271889388856785,
    -2.938466088430908
  ],
  [
    43.271889388856785,
    -2.940093910508871
  ],
  [
    43.26973061114321,
    -2.938466088430908
  ],
  [
    43.26973061114321,
    -2.940093910508871
  ],
  [
    43.271889388856785,
    -2.9381947847466234
  ],
  [
    43.271889388856785,
    -2.940365214183906
  ],
  [
    43.26973061114321,
    -2.9381947847466234
  ],
  [
    43.26973061114321,
    -2.940365214183906
  ],
  [
    43.27081,
    -2.9379234815851833
  ],
  [
    43.27081,
    -2.9406365183817855
  ]
]

# create a base map centered around รง
start = geopy.Point(-2.93928,43.27081)

mapObj = folium.Map(location = [43.27081,-2.93928], zoom_start = 20)

for i in localizacion: # .shape[0] for Pandas DataFrame is the number of rows
    # create marker for location i 
    
    markerObj = folium.Marker(location =i,popup="Number of measurment: 0", icon=folium.DivIcon(html=f"""
            <div><svg>
                <rect x="0", y="0" width="60" height="60", fill="red", opacity=".3" 
            </svg></div>""")).add_to(mapObj)
    markerObj = folium.Marker(location =i,popup="Number of measurment: 0").add_to(mapObj)
    # add marker to map
    # markerObj.add_to(mapObj)
# display map

mapObj.save("index.html")
import io
from PIL import Image

img_data = mapObj._to_png(5)
img = Image.open(io.BytesIO(img_data))
img.save('index.png')


# # Make an empty map
# n = folium.Map(location=[20,0], tiles="OpenStreetMap", zoom_start=2)

# # add marker one by one on the map
# for i in range(0,len(data)):
#     html=f"""
#         <h1> {data.iloc[i]['name']}</h1>
#         <p>You can use any html here! Let's do a list:</p>
#         <ul>
#             <li>Item 1</li>
#             <li>Item 2</li>
#         </ul>
#         </p>
#         <p>And that's a <a href="https://www.python-graph-gallery.com">link</a></p>
#         """
#     iframe = folium.IFrame(html=html, width=200, height=200)
#     popup = folium.Popup(iframe, max_width=2650)
#     folium.Marker(
#         location=[data.iloc[i]['lat'], data.iloc[i]['lon']],
#         popup=popup,
#         icon=folium.DivIcon(html=f"""
#             <div><svg>
#                 <circle cx="50" cy="50" r="40" fill="#69b3a2" opacity=".4"/>
#                 <rect x="35", y="35" width="30" height="30", fill="red", opacity=".3" 
#             </svg></div>""")
#     ).add_to(n)

# # Show the map again
# n
# Make this Notebook Trusted to load map: File -> Trust N
